#include <iostream>
#include <string>
#include <fstream>
#include <ios>
#include <sstream>
#include <cstring>
#include <vector>
#include "MyHeader"

using namespace std;

int main(int argc, char*argv[])
{
std::string inputPGMFile = "images/128px.pgm";
	int largeWidth, largeHeight;

	//read the input image dimensions
	std::string inputLine;
	std::ifstream imageFile;
	imageFile.open(inputPGMFile, std::ios::binary | std::ios::in);

	getline(imageFile,inputLine); //P5
	getline(imageFile,inputLine);

	while(inputLine[0]=='#')
	{
		getline(imageFile,inputLine);  //comments ;;;;iterate for more comments
	}
	//getline(imageFile,inputLine); //width height
	std::istringstream iss( inputLine );
	iss >> largeWidth;
	iss >> largeHeight;
	getline(imageFile,inputLine); //ecocode
	getline(imageFile,inputLine); //blank line

	//std::vector<unsigned char **> imageSequence;
	int** imageSequence;

	imageSequence = extract(largeWidth, largeHeight, imageFile );

	//imageSequence is the 2d array for the image. Insert the kernel to read pixels from imageSequence

	write(imageSequence, largeWidth, largeHeight);
}

int** extract(int largeWidth, int largeHeight, std::ifstream& imageFile ) //returns a 2D array of a single frame
{
	unsigned char pixel;
	int ** pixels = new int*[largeHeight]; //dynamic 2D array to store a frame
	for (int i =0;i<largeHeight;i++)
	{
		pixels[i]= new int[largeWidth];
	}
	//move read pointer to the begin coordinates.
	imageFile.seekg((0), std::ios::beg);
	for (int i =0; i<largeHeight; i++)
	{
		for (int j =0;j<largeWidth;j++)
		{
			imageFile.read((char *) &pixel, 1);
			pixels[i][j] = int(pixel);
			//std::cout<<int(pixel)<<;
		}

		//skipping pixels, to jump to the next line of pixels 
		imageFile.seekg(0, std::ios::cur);
		/*for (int k =0;k<(largeWidth-width);k++)
                {
                        iss.get(pixel);
                }*/
	}
	return pixels;
}

void write(int ** imageSequence,int largeWidth, int largeHeight)
{
		{	std::string zita ="p2noisy.pgm";
			std::ofstream creatMyFile(zita, std::ios::out | std::ios::binary); //creation of a single file name "name_xxxx" the frame as pgm file.
			//writing the comments and pgm description;

			creatMyFile<<"P2"<<"\n#Generated by SMKKUD001"<<"\n"<<largeWidth <<" "<<largeHeight<<"\n255"<<"\n";
			for (int i =0; i<largeHeight;i++ )
			{
				for(int j=0;j<largeWidth;j++)
				{
					//creatMyFile.write((int *) &(imageSequence[i][j]), sizeof(imageSequence[i][j]));
					//putwc(imageSequence[i][j],creatMyFile)
					creatMyFile << imageSequence[i][j] << " ";
				}
				creatMyFile << std::endl;
			}
			//imageSequence[k] [] delete;
			creatMyFile.close();//done writting to file
		}	

}